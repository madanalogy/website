<frontmatter>
title: "CS3282 Module Info"
header: topnav.md
pageNav: 2
footer: footer.mbdf
head: head.mbdf
</frontmatter>

# CS3282 : Thematic Systems Project I

## Module structure
The following two compulsory parts account for 40% of the module:
1. [Lightning Talks](#lightning-talks): 30%
1. Professional Conduct: 10%

You can choose a combination of the following optional components to make up the remaining 60%:
1. [External Project](#external-project): up to 30%
1. [2nd Internal Project](#2nd-internal-project): up to 40%
1. [Book chapter](#book-chapter): up to 30%

## Lectures

{{ cs3282_time }} in {{ cs3282_venue }}

<span id="expertiseAreas">

## Expertise Areas

While this is not a _graded_ deliverable %%(it used to be; we made it non-graded from this semester)%%, you are encouraged to choose your CS3281&2 work in a way that gives you an 'expertise' in a few areas.

**Objective**: Gain in-depth knowledge of a few specific areas so that you are considered an expert of those areas compared to your peers.

Just one semester is certainly not enough to become an ‘expert’ of something. Consider this module just the initial step in the journey of becoming an expert. Our expectations are,

* By the end of the semester, you know your chosen expertise areas better than your peers to the extent that you can teach those peers interesting and useful things from those areas.
* Based on your current trajectory, assuming you continue to improve your knowledge in that area for 1-2 years after the module (for most of you this would coincide with your graduation), your knowledge in that area is among the top 5% of your cohort.
* The area must be strongly related to SE.


#### Things you can do

1. Consider picking one from each of the three below.
   * An **Aspect**: Various aspects of an SE project e.g. Testing, CI, Scalability, Requirements, Security, Performance, ...
   * A **Language**: e.g. Java, C#, Go, Python, Ruby, Kotlin, Elixir, JavaScript, HTML, CSS, ...
   * A **Domain**: Any other technical topic relevant to SE that you want to claim as your interest/expert area e.g Search Engine Optimization, Regular Expressions

2. Learn more about them yourself. While you do that, produce evidence of your knowledge. %%E.g. blog posts, stackoverflow questions/answers%%
3. Create learning resources for others trying to learn the same area (see [Book Chapter](#book-chapter) deliverables explained below)
4. Share interesting and useful bits of your knowledge with the class by giving short talks (refer [Lightning Talks](#lightning-talks) deliverables explained below)

</span>

## External Project

**Objective** : To learn to work with big OSS projects.

You can choose any OSS project as your External project, provided it is be a big mature external project with an established community and experienced developers. 

Some sources of potential external projects:
* [GSoC projects](https://summerofcode.withgoogle.com/archive/2019/organizations/) are a good place to start your search but note that not all GSoC projects qualify.
* Other lists of beginner-friendly OSS projects: [up-for-grabs](http://up-for-grabs.net), [awesome-for-beginners](https://github.com/MunGell/awesome-for-beginners) 

If you are not making good progress with the chosen project by week 5, you should switch to a different project. 
Or you can try multiple projects at the same time. "The project was too slow to respond" is not a valid excuse.
The work under this part, 

* is cumulative i.e. the work can be in more than one qualifying projects. Even work done before the semester can be counted. 
* can be double-counted for expert area if the work is related to your expert area.


**Deliverables**:

* 2 - 3 PRs merged. Only merged PRs are counted.
* A one-page report (due by week 10) containing,
  * a comparison between the process of the external project to the <tooltip content="the project you worked in CS3281">internal project</tooltip> 
  * suggestions for the internal project based on what you observed in the external project

**Grading**:
 
* Based on PRs completed [20%]  and the report [10%]

## 2nd Internal Project

Optionally, you can contribute to another NUS-OSS project. This component can count upto 40%.

Deliverables are similar to CS3281.


<div id="deliverable-book-chapter">

## Book Chapter

This deliverable is optional. It can count up to 30%.

We are going to build a [collection of learning resources](https://github.com/se-edu/learningresources) (an online book of sorts) to help others learn the areas you are learning yourself.

* You are expected to make periodic PRs to create/enhance the relevant pages as you learn the topic. Minimally, you are expected to merge one PR by week 7 and one more by week 13.
* Do ==read the [instructions on how to contribute to se-edu/learningresources](https://se-edu.github.io/learningresources/contributing.html)==.
* Improving existing content is as valuable as adding new content.
* While you have write access to the repo, use your own fork to submit PRs.
* You can create PRs without corresponding issues.
* Please get the PRs reviewed and approved by a peer before requesting prof's review. You can also request reviews from past contributors of the repo (especially if you are improving an existing topic) but there is no guarantee that they will be available to review.
* When getting reviews, it is useful to get a review from somebody how knows the topic (to help with the accuracy of the content) but also from somebody who is new to the topic (i.e., your target reader).
* Aim to get some content merged before mid-semester break.
* If there are others in the class working on the same topic, coordinate among yourselves to avoid duplication of work.

#### Grading

Based on the value added to se-edu/learningresources. Other forms of writing (e.g. blog posts etc.) can be counted too.

</div>

## Lightning talks 

One important way you can establish credibility as an 'Expert' is by educating others about your expert area and evangelizing it. _Lightning Talks_ is meant to promote that aspect.

* Each student is required to give two short talks on interesting topics useful to your classmates.
  * There are three rounds of lightning talks: Round A, B, and C. However, Round B is a rehearsal for Round C i.e., only two talks, but the second one is given twice.
* Each talk will be about 7 minutes + 3 minutes for Q&A. There will be 7-8 talks per week.
* You may want to rehearse the talk with one or more of your team members and improve based on their feedback before delivering it to the class.
* After the talk, you are required to post the talk summary (and the slides) as an issue in the nus-cs3282/{{ year }} repo for future reference and further discussion.

#### Grading

* **Lightning talks [10+20 = 30%]**  -- based on peer evaluations and instructor observations
  * Criteria: usefulness of content and quality of delivery


## Professional Conduct

This component is measured based on peer evaluations and instructor observations

* Peer evaluations will measure: 
  * How helpful you are to classmates in peer reviewing lightning talk rehearsals, book chapter contributions, etc.
* Instructor observations will measure:
  * Punctuality and attentiveness for lightning talks
  * Conformance to administrative requirements of the module
  * Adherence to module deadlines
  * The quality of feedback given for lightning talks (i.e. post-talk feedback)
  * Participation in class discussions


## Team structure

* You’ll work in small team (4-5 members). Team members are expected to peer-review work of each other.
* Teams will be formed by the instructor. The teams may be changed at the middle of the semester.


## Pre-Module Preparations
* Pick expert areas to study. 
* Start looking for an external OSS project. Once you have found a few potential projects, try to get started on contributing to them.
  Even work done before the semester can count for module grading.


